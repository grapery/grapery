name: CI/CD Deploy

on:
  push:
    branches: [main, develop,feature/coze]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: crpi-kz6w8hb0pa94yvgy.cn-hangzhou.personal.cr.aliyuncs.com
      IMAGE_NAME: grapery-app
      TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env file with secrets
        run: |
          export DB_PASSWORD=${{ env.DB_PASSWORD }}
          export DB_USER=${{ env.DB_USER }}
          export JWT_SECRET=${{ env.JWT_SECRET }}
          export REDIS_PASSWORD=${{ env.REDIS_PASSWORD }}
          export ACR_PASSWORD=${{ env.ACR_PASSWORD }}
          export ACR_USERNAME=${{ env.ACR_USERNAME }}
          bash generate_env.sh

      - name: Login to Aliyun ACR
        run: echo ${{ env.ACR_PASSWORD }} | docker login $REGISTRY -u ${{ env.ACR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -f dockerfiles/Dockerfile.grapes -t $REGISTRY/$IMAGE_NAME:$TAG .

      - name: Push Docker image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$TAG

      - name: Remote Deploy (Aliyun ECS/ACK/Serverless)
        env:
          ALIYUN_ACCESS_KEY: ${{ env.ALIYUN_ACCESS_KEY_ID }}
          ALIYUN_SECRET_KEY: ${{ env.ALIYUN_ACCESS_KEY_SECRET }}
        run: |
          # 这里可以用 aliyuncli/ossutil/自定义 webhook/云助手等方式远程触发部署
          # 示例：curl -X POST https://your-ecs-api/deploy?image=$REGISTRY/$IMAGE_NAME:$TAG 
